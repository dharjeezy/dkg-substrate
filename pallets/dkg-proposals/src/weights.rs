
//! Autogenerated weights for `pallet_dkg_proposals`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-01-22, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/dkg-standalone-node
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet
// pallet-dkg-proposals
// --extrinsic
// force_set_maintainer
// --steps
// 50
// --repeat
// 20
// --output
// .

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn set_maintainer() -> Weight;
	fn force_set_maintainer() -> Weight;
	fn set_threshold(_c: u32, ) -> Weight;
	fn set_resource(_c: u32, ) -> Weight;
	fn remove_resource(_c: u32, ) -> Weight;
	fn whitelist_chain() -> Weight;
	fn add_proposer() -> Weight;
	fn remove_proposer() -> Weight;
}

/// Weight functions for `pallet_dkg_proposals`.
pub struct DKGProposalsWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for DKGProposalsWeight<T> {
	// Storage: DKGProposals Maintainer (r:1 w:1)
	fn set_maintainer() -> Weight {
		(28_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DKGProposals Maintainer (r:1 w:1)
	fn force_set_maintainer() -> Weight {
		(25_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}

	fn set_threshold(_c: u32, ) -> Weight {
		(19_957_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}

	fn set_resource(_c: u32, ) -> Weight {
		(2_957_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}

	fn remove_resource(_c: u32, ) -> Weight {
		(2_589_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}

	// Storage: DKGProposals ChainNonces (r:1 w:1)
	fn whitelist_chain() -> Weight {
		(25_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}

	fn add_proposer() -> Weight {
		(32_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}

	fn remove_proposer() -> Weight {
		(31_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}

}

impl WeightInfo for () {
	fn set_maintainer() -> Weight { 0 }
	fn force_set_maintainer() -> Weight { 0 }
	fn set_threshold(_c: u32, ) -> Weight { 0 }
	fn set_resource(_c: u32, ) -> Weight { 0 }
	fn remove_resource(_c: u32, ) -> Weight { 0 }
	fn whitelist_chain() -> Weight { 0 }
	fn add_proposer() -> Weight { 0 }
	fn remove_proposer() -> Weight { 0 }
}
